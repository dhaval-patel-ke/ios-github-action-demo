name: Notify Release
description: 'Notify on google chat'

inputs:
  app-name:
    description: 'Application Name'
    required: true
    default: 'KernelApp'

  app-build-link:
    description: 'AppBuild download link'
    required: true
    default: ''

  app-platform:
    description: 'App platform. i.e. android, ios'
    required: true

  google-chat-webhook:
    description: 'Google chat webhook'
    required: true

  version-name:
    description: 'Application version name'
    required: true
    default: '1.0'

  skip-tag:
    description: 'Skip GitHub tag from release note'
    required: false
    default: 'false'

  release-note-file:
    description: 'Name of the release note'
    required: false
    default: 'release-note.txt'

runs:
  using: "composite"
  steps:
    - name: Retrieve release note
      id: release-note
      shell: bash
      run: |
        {
            echo 'RELEASE_NOTE<<EOF'
            git log -1 --format=%B
            echo EOF
        } >> "$GITHUB_ENV"

    - name: Generate message
      shell: bash
      env:
        APP_NAME: ${{ inputs.app-name }}
        APP_PLATFORM: ${{ inputs.app-platform }}
        VERSION_NAME: ${{ inputs.version-name }}
        APP_BUILD_LINK: ${{ inputs.app-build-link }}
        RELEASE_NOTE_FILE: ${{ inputs.release-note-file }}
        SKIP_TAG: ${{ inputs.skip-tag }}
      run: |
        echo "*${{ env.APP_NAME }} ðŸš€ðŸš€ðŸš€*" >> ${{ env.RELEASE_NOTE_FILE }}
        echo "*v${{ env.VERSION_NAME }}* for ${{ env.APP_PLATFORM }} is ready to test. *<${{ env.APP_BUILD_LINK }}|Click Here>* to download!\n" >> ${{ env.RELEASE_NOTE_FILE }}
        if ${{ env.SKIP_TAG == false || env.SKIP_TAG == 'false' }}; then
          echo "*GitHub Tag:*\n${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ env.VERSION_NAME }}\n" >> ${{ env.RELEASE_NOTE_FILE }}
        fi
        echo "*Release Note:*\n${{ env.RELEASE_NOTE }}" >> ${{ env.RELEASE_NOTE_FILE }}

    - name: Upload release note
      uses: actions/upload-artifact@v4
      env:
        RELEASE_NOTE_FILE: ${{ inputs.release-note-file }}
      with:
        name: ${{ env.RELEASE_NOTE_FILE }}
        path: ${{ env.RELEASE_NOTE_FILE }}

    - name: Read file content
      id: read-content
      uses: actions/github-script@v7
      env:
        RELEASE_NOTE_FILE: ${{ inputs.release-note-file }}
      with:
        result-encoding: string
        script: |
          const fs = require('fs');
          const filePath = '${{ env.RELEASE_NOTE_FILE }}';
          const fileContent = fs.readFileSync(filePath, 'utf8');
          const content = fileContent.replace("'", "");
          return content;

    - name: Notify release on google chat
      shell: bash
      env:
        GOOGLE_CHAT_WEBHOOK: ${{ inputs.google-chat-webhook }}
      run: |
        curl --location '${{ env.GOOGLE_CHAT_WEBHOOK }}' --header 'Content-Type: application/json' --data '{ "text": "${{ steps.read-content.outputs.result }}" }'
